## Example multihost
## three servers, "bi","kibana","elastic"
## replace server names and domains correspondigly (i.e. "bi.cl", "kibana.cl", "elastic.cl")
# also replace "ip_localhost" with the ip of the localhost, and the port next to the name correspondingly (specific port that will serve that domain)


upstream bi {
        ip_hash;
        server ip_localhost:8888 fail_timeout=5580s max_fails=1000;
}

upstream elastic {
        ip_hash;
        server ip_localhost:9200 fail_timeout=5580s max_fails=1000;
}

upstream kibana {
        ip_hash;
        server ip_localhost:5601 fail_timeout=5580s max_fails=1000;
}




server {
    if ($host = bi.cl) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
        listen 80;
        server_name bi.cl;
        return 301 https://$host$request_uri;
        location / {
            proxy_pass http://bi;
        }
}


server {
    if ($host = elastic.cl) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
        listen 80;
        server_name elastic.cl;
        return 301 https://$host$request_uri;
        location / {
            proxy_pass http://elastic;
        }
}


server {
    if ($host = kibana.cl) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
        listen 80;
        server_name kibana.cl;
        return 301 https://$host$request_uri;
        location / {
            proxy_pass http://kibana;
        }
}

server {
    listen 443 ssl;
    server_name bi.cl;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/bi.cl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bi.cl/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass  http://bi;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

}


server {
    listen 443 ssl;
    server_name elastic.cl;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/elastic.cl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/elastic.cl/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass  http://elastic;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

}

server {
    listen 443 ssl;
    server_name kibana.cl;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/kibana.cl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kibana.cl/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass  http://kibana;
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

}
